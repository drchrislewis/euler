<?xml version="1.0" ?>
<launch>
  <!-- This launch file runs the main calibration nodes for euler.  These nodes calibrate
    a kinect camera transform (extrinsic) to a target whose position is known relative to the robot's base
    Usage:
      First, edit the urdf to set the location of the target relative to the robot's base
      Then launch this file. It will automatically the mutable joint states file
  -->
  <!-- gui: Loads gui display if True -->
  <arg name="gui" default="True" />

  <!-- camera namespace - must match namespaces in configuration files -->
  <arg name="camera_ns" default="asus" />


  <!-- Extrinsic calibration service (launched in global namespace just in case
       multiple camera calibrations are desired.  Each camera in it's own namespace
  -->
  <node pkg="industrial_extrinsic_cal" type="service_node" name="calibration_service_node" output="screen" >
   <param name="yaml_file_path" value="$(find euler_calibration)/yaml/" />
   <param name="store_results_package_name" value="$(find euler_calibration)/results" />
   <rosparam>
     camera_file: "euler_cameras.yaml"
     target_file: "euler_targets.yaml"
     cal_job_file: "euler_caljob.yaml"
     store_results_file_name: "euler_transforms.launch"
   </rosparam>
  </node>

  <!-- Launch mutable joint state publisher for calibratable transforms -->
  <node  name="mutable_joint_state_publisher" pkg="industrial_extrinsic_cal" type="mutable_joint_state_publisher" >
    <param name="mutableJointStateYamlFile" value="$(find euler_calibration)/yaml/euler_mutable_joint_states.yaml" />
  </node>

  <!-- Launch the asus camera node (openni2 launch uses "camera" parameter to create an namespace-->
    <include file="$(find openni2_launch)/launch/openni2.launch" >
      <arg name="publish_tf" value="false" />
      <arg name="camera" value="$(arg camera_ns)" />
      <!-- Hardware depth registration is required because urdf does not contain depth frames-->
      <arg name="depth_registration" default="true" />
    </include>

  <group ns="$(arg camera_ns)" >
    <!-- Load robot description -->
    <param name="robot_description" textfile="$(find euler_calibration)/urdf/camera_scene.urdf" />

    <!-- Launch robot state/joint state publishers for camera and target -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
      <param name="publish_frequency" value="50" />
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <rosparam param="source_list">[/mutable_joint_states]</rosparam>
    </node>

    <!-- Launch Rviz -->

    <group  if="$(arg gui)">
      <node name="rviz" pkg="rviz" type="rviz" args="-d $(find euler_calibration)/config/euler_cal.rviz" required ="true"/>
    </group>
  </group>

</launch>